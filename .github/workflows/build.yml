name: Build and Test
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install pkg-config (macOS)
        if: runner.os == 'macOS'
        run: brew install git icu4c pkg-config

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache pgrx
        uses: actions/cache@v4
        with:
          path: ~/.pgrx
          key: ${{ runner.os }}-pgrx-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-pgrx-

      - name: Install pgrx
        run: |
          cargo install --locked cargo-pgrx --version 0.12.9 || true
          cargo pgrx init
        env:
          CARGO_HTTP_TIMEOUT: 300
          PKG_CONFIG_PATH: /opt/homebrew/opt/icu4c/lib/pkgconfig

      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy --all -- -D warnings

      - name: Build Extension
        run: cargo pgrx package

      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pg_snowid-${{ runner.os }}
          path: |
            target/release/libpg_sqids.so
            target/release/libpg_sqids.dylib
            target/release/pg_sqids.dll

      - name: Test
        run: cargo test --all

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-